{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"web-component": {
		"prefix": "web-component",
		"body": [
			"const html = function (templates, ...values) {",
			"    const template = document.createElement('template')",
			"    let str = ''",
			"    templates.forEach((template, index) => {",
			"        str += template",
			"        str = values[index] ? str + values[index] : str",
			"    })",
			"    template.innerHTML = str.trim()",
			"    return template.content.firstChild",
			"}",
			"",
			"class $1 extends HTMLElement {",
			"",
			"    constructor() {",
			"        super()",
			"    }",
			"",
			"    _render() {",
			"        const inner = html`<b>Hello There!</b>`",
			"        this.innerHTML = ''",
			"        this.appendChild(inner)",
			"    }",
			"",
			"    connectedCallback() { this._render() }",
			"",
			"    disconnectedCallback() { }",
			"",
			"    attributeChangedCallback(name, oldValue, newValue) { }",
			"",
			"    adoptedCallback() { }",
			"",
			"}",
			"",
			"window.customElements.define('$2', $1)",
			""

		]
	}
}